pipeline {
    agent any
    
    parameters {
        string(name: 'jobName', description: 'Enter the name of the job:', defaultValue: '', trim: true)
    }
    
    stages {
        stage('Check Job Existence') {
            steps {
                script {
                    def jobExists = false
                    def jobList = Jenkins.instance.getAllItems(Job.class)
                    
                    for (job in jobList) {
                        if (job.fullName == params.jobName) {
                            jobExists = true
                            break
                        }
                    }
                    
                    if (!jobExists) {
                        echo "Job '${params.jobName}' not found."
                        currentBuild.result = 'FAILURE'
                        error "Job '${params.jobName}' not found."
                    }
                }
            }
        }
        
        stage('List Workspace Directory') {
            when {
                expression { currentBuild.result != 'FAILURE' }
            }
            steps {
                script {
                    def job = Jenkins.instance.getItemByFullName(params.jobName)
                    def workspaceDir = job.getLastBuild().getWorkspace()
                    sh "ls -la ${workspaceDir}"
                }
            }
        }
        
        stage('Backup to AWS S3') {
            when {
                expression { currentBuild.result != 'FAILURE' }
            }
            steps {
                // Your script to backup workspace directory to AWS S3
                // Use AWS CLI or SDK to perform the backup
                // Example: aws s3 sync ${workspaceDir} s3://your-bucket
                // Make sure AWS credentials are configured on Jenkins
            }
        }
    }
}
